package main

import (
	"fmt"
)

// swap использует сложение и вычитание для обмена значениями без использования третьей переменной
// Этот метод работает только для целых чисел и также может привести к переполнению
func swap(a, b int) (int, int) {
	// Используем сложение и вычитание для обмена значениями
	a = a + b
	b = a - b
	a = a - b
	return a, b
}

// swapXor использует XOR для обмена значениями без использования третьей переменной
// Этот метод работает только для целых чисел и не требует дополнительных переменных
// Он может быть полезен в ситуациях, когда сложение и вычитание могут привести
// к переполнению, например, при работе с большими числами
func swapXor(x, y int) (int, int) {
	// Используем XOR для обмена значениями
	x = x ^ y
	y = x ^ y
	x = x ^ y
	return x, y
}

func main() {
	fmt.Println("Пример +/- для обмена значениями:")
	a, b := 5, 10
	fmt.Printf("Входные данные: a = %d, b = %d\n", a, b)

	// Пример использования сложения и вычитания для обмена значениями
	a, b = swap(a, b)
	fmt.Printf("Выходные данные: a = %d, b = %d\n", a, b)

	// Пример использования XOR для обмена значениями
	fmt.Println("\nПример XOR для обмена значениями:")
	x, y := 25, 50
	fmt.Printf("Входные данные: a = %d, b = %d\n", x, y)

	x, y = swapXor(x, y)
	fmt.Printf("Выходные данные после XOR: a = %d, b = %d\n", x, y)
}
